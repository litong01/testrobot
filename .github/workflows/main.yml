# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Start up kind k8s cluster
        uses: helm/kind-action@v1.2.0
        with:
          cluster_name: kind

      - name: Deploy metallb
        run: |
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/master/manifests/namespace.yaml
          kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/master/manifests/metallb.yaml

      - name: Fixup metallb
        run: |
          PREFIX=$(docker network inspect -f '{{range .IPAM.Config }}{{ .Gateway }}{{end}}' kind | cut -d '.' -f1,2)
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            namespace: metallb-system
            name: config
          data:
            config: |
              address-pools:
              - name: default
                protocol: layer2
                addresses:
                - $PREFIX.255.230-$PREFIX.255.240
          EOF

      - name: Deploy the nginx ingress controller
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.48.1/deploy/static/provider/cloud/deploy.yaml

      - name: Show kind command
        run: which kind

      - name: Show kubectl command
        run: which kubectl

      - name: Show k8s nodes
        run: kubectl get nodes
        
      - name: Show kind clusters
        run: kind get clusters
  
      - name: Wait for the controller to have the external IP
        run: |
          for ((x=0;x<30;x++)); do
            ENDPOINT=$(kubectl get -n ingress-nginx service/ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress}')
            if [[ ! -z $ENDPOINT ]]; then
              break
            fi
            echo -e ${Green}Waiting${ColorOff} for Nginx Ingress Controller to be ready...
            sleep 5
          done

      - name: Show result
        run: |
          kubectl get -n ingress-nginx service/ingress-nginx-controller -o yaml
